// <auto-generated />
using System;
using Blanket.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blanket.Server.Migrations
{
    [DbContext(typeof(BlanketDbContext))]
    partial class BlanketDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("Blanket.Server.Models.Model.BlanketProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PathName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Size")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("BlanketProducts", (string)null);
                });

            modelBuilder.Entity("Blanket.Server.Models.Model.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BrandName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Brands", (string)null);
                });

            modelBuilder.Entity("Blanket.Server.Models.Model.BrandImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BrandId")
                        .IsUnique();

                    b.ToTable("BrandImages", (string)null);
                });

            modelBuilder.Entity("Blanket.Server.Models.Model.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BlanketId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BlanketId");

                    b.ToTable("Images", (string)null);
                });

            modelBuilder.Entity("Blanket.Server.Models.Model.BlanketProduct", b =>
                {
                    b.HasOne("Blanket.Server.Models.Model.Brand", "Brand")
                        .WithMany("Blankets")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Blanket.Server.Models.Model.BrandImage", b =>
                {
                    b.HasOne("Blanket.Server.Models.Model.Brand", "Brand")
                        .WithOne("BrandImage")
                        .HasForeignKey("Blanket.Server.Models.Model.BrandImage", "BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Blanket.Server.Models.Model.Image", b =>
                {
                    b.HasOne("Blanket.Server.Models.Model.BlanketProduct", "Blanket")
                        .WithMany("Images")
                        .HasForeignKey("BlanketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blanket");
                });

            modelBuilder.Entity("Blanket.Server.Models.Model.BlanketProduct", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Blanket.Server.Models.Model.Brand", b =>
                {
                    b.Navigation("Blankets");

                    b.Navigation("BrandImage");
                });
#pragma warning restore 612, 618
        }
    }
}
